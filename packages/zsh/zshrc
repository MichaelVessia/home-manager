# Custom .zshrc for Home Manager Zsh configuration

# Enable completion
autoload -U compinit
compinit

# Enable auto-suggestions and syntax highlighting from Nix
if command -v zsh-autosuggestions >/dev/null 2>&1; then
  source ~/.nix-profile/share/zsh-autosuggestions/zsh-autosuggestions.zsh 2>/dev/null
fi

if command -v zsh-syntax-highlighting >/dev/null 2>&1; then
  source ~/.nix-profile/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null
fi

# Load Oh My Zsh from Nix store
if [[ -f ~/.nix-profile/share/oh-my-zsh/oh-my-zsh.sh ]]; then
  export ZSH="$HOME/.nix-profile/share/oh-my-zsh"
  ZSH_THEME="robbyrussell"
  plugins=(fzf git docker kubectl npm node z colored-man-pages command-not-found history-substring-search)
  source ~/.nix-profile/share/oh-my-zsh/oh-my-zsh.sh
fi

# Source Nix environment
if [ -f /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh ]; then
  source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
fi

# Add ~/.local/bin to PATH for user binaries (e.g., Claude CLI)
if [ -d ~/.local/bin ]; then
  export PATH="$HOME/.local/bin:$PATH"
fi

# macOS-specific configurations
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Add Homebrew to PATH for macOS
  if [ -d /opt/homebrew/bin ]; then
    export PATH="/opt/homebrew/bin:$PATH"
  fi
  if [ -d /usr/local/bin ]; then
    export PATH="/usr/local/bin:$PATH"
  fi

  # Load FLOCASTS_NPM_TOKEN from secrets
  if [ -f $HOME/home-manager/secrets/flocasts-npm-token ]; then
    export FLOCASTS_NPM_TOKEN=$(cat $HOME/home-manager/secrets/flocasts-npm-token | tr -d '\n')
  fi

  # Load JIRA_API_TOKEN from secrets
  if [ -f $HOME/home-manager/secrets/jira-api-token ]; then
    export JIRA_API_TOKEN=$(cat $HOME/home-manager/secrets/jira-api-token | tr -d '\n')
  fi
fi

# Load custom functions
if [ -f ~/.config/zsh/functions.zsh ]; then
  source ~/.config/zsh/functions.zsh
fi

# Aliases
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias dots="chezmoi cd"
alias hm="cd ~/home-manager"

# zoxide aliases (cd is now handled by zoxide directly)
alias cdi="zi"

alias ls="eza"
alias ll="eza -l"
alias la="eza -la"
alias lt="eza --tree"

alias cp="cp -v"
alias ddf="df -h"
alias etc="erd -H"
alias mkdir="mkdir -p"
alias mv="mv -v"
alias rm="rm -v"

alias avi="vlc *.avi"
alias jpeg="feh -Z *.jpeg"
alias jpg="feh -Z *.jpg"
alias mkv="vlc *.mkv"
alias mov="vlc *.mov"
alias mp3="vlc *.mp3"
alias mp4="vlc *.mp4"
alias png="feh -Z *.png"
alias vvlc="vlc *"
alias webm="vlc *.webm"

# Git aliases
alias gaa="git add -A"
alias ga="git add"
alias gbd="git branch --delete"
alias gb="git branch"
alias gc="git commit"
alias gcm="git commit -m"
alias gcob="git checkout -b"
alias gco="git checkout"
alias gd="git diff"
alias gl="git log"
alias gp="git push"
alias gph="git push -u origin HEAD"
alias gs="git status"
alias gst="git stash"
alias gstp="git stash pop"

# Initialize fzf
if command -v fzf >/dev/null 2>&1; then
  # Set fzf default options
  export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border"
  export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git"
  export FZF_CTRL_T_COMMAND="fd --type f --hidden --follow --exclude .git"
  export FZF_ALT_C_COMMAND="fd --type d --hidden --follow --exclude .git"

  # Key bindings
  if [[ -f ~/.local/share/fzf/shell/key-bindings.zsh ]]; then
    source ~/.local/share/fzf/shell/key-bindings.zsh
  fi

  # Completions
  if [[ -f ~/.local/share/fzf/shell/completion.zsh ]]; then
    source ~/.local/share/fzf/shell/completion.zsh
  fi
fi

# Initialize zoxide
if command -v zoxide >/dev/null 2>&1; then
  eval "$(zoxide init zsh --cmd cd)"
fi

# Initialize atuin
if command -v atuin >/dev/null 2>&1; then
  eval "$(atuin init zsh)"
fi

# Initialize starship prompt
if command -v starship >/dev/null 2>&1; then
  eval "$(starship init zsh)"
fi

# Initialize direnv
if command -v direnv >/dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi
